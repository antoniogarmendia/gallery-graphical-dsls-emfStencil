/**
 */
package caex.caex30.caex.provider;

import caex.caex30.caex.util.CAEXAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class CAEXItemProviderAdapterFactory extends CAEXAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CAEXItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.AttributeFamily} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeFamilyItemProvider attributeFamilyItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.AttributeFamily}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeFamilyAdapter() {
		if (attributeFamilyItemProvider == null) {
			attributeFamilyItemProvider = new AttributeFamilyItemProvider(this);
		}

		return attributeFamilyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.AttributeNameMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeNameMappingItemProvider attributeNameMappingItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.AttributeNameMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeNameMappingAdapter() {
		if (attributeNameMappingItemProvider == null) {
			attributeNameMappingItemProvider = new AttributeNameMappingItemProvider(this);
		}

		return attributeNameMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.Attribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeItemProvider attributeItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.Attribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeAdapter() {
		if (attributeItemProvider == null) {
			attributeItemProvider = new AttributeItemProvider(this);
		}

		return attributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.AttributeLib} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeLibItemProvider attributeLibItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.AttributeLib}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeLibAdapter() {
		if (attributeLibItemProvider == null) {
			attributeLibItemProvider = new AttributeLibItemProvider(this);
		}

		return attributeLibItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.AttributeValueRequirement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeValueRequirementItemProvider attributeValueRequirementItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.AttributeValueRequirement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeValueRequirementAdapter() {
		if (attributeValueRequirementItemProvider == null) {
			attributeValueRequirementItemProvider = new AttributeValueRequirementItemProvider(this);
		}

		return attributeValueRequirementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.CAEXBasicObject} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CAEXBasicObjectItemProvider caexBasicObjectItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.CAEXBasicObject}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCAEXBasicObjectAdapter() {
		if (caexBasicObjectItemProvider == null) {
			caexBasicObjectItemProvider = new CAEXBasicObjectItemProvider(this);
		}

		return caexBasicObjectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.CAEXFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CAEXFileItemProvider caexFileItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.CAEXFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCAEXFileAdapter() {
		if (caexFileItemProvider == null) {
			caexFileItemProvider = new CAEXFileItemProvider(this);
		}

		return caexFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.CAEXObject} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CAEXObjectItemProvider caexObjectItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.CAEXObject}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCAEXObjectAdapter() {
		if (caexObjectItemProvider == null) {
			caexObjectItemProvider = new CAEXObjectItemProvider(this);
		}

		return caexObjectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.ExternalInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalInterfaceItemProvider externalInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.ExternalInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalInterfaceAdapter() {
		if (externalInterfaceItemProvider == null) {
			externalInterfaceItemProvider = new ExternalInterfaceItemProvider(this);
		}

		return externalInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.ExternalReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalReferenceItemProvider externalReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.ExternalReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalReferenceAdapter() {
		if (externalReferenceItemProvider == null) {
			externalReferenceItemProvider = new ExternalReferenceItemProvider(this);
		}

		return externalReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.InstanceHierarchy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceHierarchyItemProvider instanceHierarchyItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.InstanceHierarchy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstanceHierarchyAdapter() {
		if (instanceHierarchyItemProvider == null) {
			instanceHierarchyItemProvider = new InstanceHierarchyItemProvider(this);
		}

		return instanceHierarchyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.InterfaceClassLib} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceClassLibItemProvider interfaceClassLibItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.InterfaceClassLib}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceClassLibAdapter() {
		if (interfaceClassLibItemProvider == null) {
			interfaceClassLibItemProvider = new InterfaceClassLibItemProvider(this);
		}

		return interfaceClassLibItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.InterfaceClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceClassItemProvider interfaceClassItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.InterfaceClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceClassAdapter() {
		if (interfaceClassItemProvider == null) {
			interfaceClassItemProvider = new InterfaceClassItemProvider(this);
		}

		return interfaceClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.InterfaceFamily} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceFamilyItemProvider interfaceFamilyItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.InterfaceFamily}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceFamilyAdapter() {
		if (interfaceFamilyItemProvider == null) {
			interfaceFamilyItemProvider = new InterfaceFamilyItemProvider(this);
		}

		return interfaceFamilyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.InterfaceIDMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceIDMappingItemProvider interfaceIDMappingItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.InterfaceIDMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceIDMappingAdapter() {
		if (interfaceIDMappingItemProvider == null) {
			interfaceIDMappingItemProvider = new InterfaceIDMappingItemProvider(this);
		}

		return interfaceIDMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.InternalElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InternalElementItemProvider internalElementItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.InternalElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInternalElementAdapter() {
		if (internalElementItemProvider == null) {
			internalElementItemProvider = new InternalElementItemProvider(this);
		}

		return internalElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.InternalLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InternalLinkItemProvider internalLinkItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.InternalLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInternalLinkAdapter() {
		if (internalLinkItemProvider == null) {
			internalLinkItemProvider = new InternalLinkItemProvider(this);
		}

		return internalLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.Mapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingItemProvider mappingItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.Mapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingAdapter() {
		if (mappingItemProvider == null) {
			mappingItemProvider = new MappingItemProvider(this);
		}

		return mappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.NominalScaled} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NominalScaledItemProvider nominalScaledItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.NominalScaled}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNominalScaledAdapter() {
		if (nominalScaledItemProvider == null) {
			nominalScaledItemProvider = new NominalScaledItemProvider(this);
		}

		return nominalScaledItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.OrdinalScaled} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrdinalScaledItemProvider ordinalScaledItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.OrdinalScaled}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrdinalScaledAdapter() {
		if (ordinalScaledItemProvider == null) {
			ordinalScaledItemProvider = new OrdinalScaledItemProvider(this);
		}

		return ordinalScaledItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.RefSemantic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RefSemanticItemProvider refSemanticItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.RefSemantic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRefSemanticAdapter() {
		if (refSemanticItemProvider == null) {
			refSemanticItemProvider = new RefSemanticItemProvider(this);
		}

		return refSemanticItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.RoleClassLib} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleClassLibItemProvider roleClassLibItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.RoleClassLib}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleClassLibAdapter() {
		if (roleClassLibItemProvider == null) {
			roleClassLibItemProvider = new RoleClassLibItemProvider(this);
		}

		return roleClassLibItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.RoleClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleClassItemProvider roleClassItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.RoleClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleClassAdapter() {
		if (roleClassItemProvider == null) {
			roleClassItemProvider = new RoleClassItemProvider(this);
		}

		return roleClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.RoleFamily} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleFamilyItemProvider roleFamilyItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.RoleFamily}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleFamilyAdapter() {
		if (roleFamilyItemProvider == null) {
			roleFamilyItemProvider = new RoleFamilyItemProvider(this);
		}

		return roleFamilyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.RoleRequirements} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleRequirementsItemProvider roleRequirementsItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.RoleRequirements}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleRequirementsAdapter() {
		if (roleRequirementsItemProvider == null) {
			roleRequirementsItemProvider = new RoleRequirementsItemProvider(this);
		}

		return roleRequirementsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.SourceDocumentInformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceDocumentInformationItemProvider sourceDocumentInformationItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.SourceDocumentInformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceDocumentInformationAdapter() {
		if (sourceDocumentInformationItemProvider == null) {
			sourceDocumentInformationItemProvider = new SourceDocumentInformationItemProvider(this);
		}

		return sourceDocumentInformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.SupportedRoleClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SupportedRoleClassItemProvider supportedRoleClassItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.SupportedRoleClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSupportedRoleClassAdapter() {
		if (supportedRoleClassItemProvider == null) {
			supportedRoleClassItemProvider = new SupportedRoleClassItemProvider(this);
		}

		return supportedRoleClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.SystemUnitClassLib} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemUnitClassLibItemProvider systemUnitClassLibItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.SystemUnitClassLib}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystemUnitClassLibAdapter() {
		if (systemUnitClassLibItemProvider == null) {
			systemUnitClassLibItemProvider = new SystemUnitClassLibItemProvider(this);
		}

		return systemUnitClassLibItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.SystemUnitClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemUnitClassItemProvider systemUnitClassItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.SystemUnitClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystemUnitClassAdapter() {
		if (systemUnitClassItemProvider == null) {
			systemUnitClassItemProvider = new SystemUnitClassItemProvider(this);
		}

		return systemUnitClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.SystemUnitFamily} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemUnitFamilyItemProvider systemUnitFamilyItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.SystemUnitFamily}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystemUnitFamilyAdapter() {
		if (systemUnitFamilyItemProvider == null) {
			systemUnitFamilyItemProvider = new SystemUnitFamilyItemProvider(this);
		}

		return systemUnitFamilyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.UnknownType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnknownTypeItemProvider unknownTypeItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.UnknownType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnknownTypeAdapter() {
		if (unknownTypeItemProvider == null) {
			unknownTypeItemProvider = new UnknownTypeItemProvider(this);
		}

		return unknownTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.Copyright} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CopyrightItemProvider copyrightItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.Copyright}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCopyrightAdapter() {
		if (copyrightItemProvider == null) {
			copyrightItemProvider = new CopyrightItemProvider(this);
		}

		return copyrightItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.Description} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionItemProvider descriptionItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.Description}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionAdapter() {
		if (descriptionItemProvider == null) {
			descriptionItemProvider = new DescriptionItemProvider(this);
		}

		return descriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.Revision} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RevisionItemProvider revisionItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.Revision}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRevisionAdapter() {
		if (revisionItemProvider == null) {
			revisionItemProvider = new RevisionItemProvider(this);
		}

		return revisionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.Version} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VersionItemProvider versionItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.Version}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVersionAdapter() {
		if (versionItemProvider == null) {
			versionItemProvider = new VersionItemProvider(this);
		}

		return versionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link caex.caex30.caex.AdditionalInformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdditionalInformationItemProvider additionalInformationItemProvider;

	/**
	 * This creates an adapter for a {@link caex.caex30.caex.AdditionalInformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdditionalInformationAdapter() {
		if (additionalInformationItemProvider == null) {
			additionalInformationItemProvider = new AdditionalInformationItemProvider(this);
		}

		return additionalInformationItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (attributeFamilyItemProvider != null) attributeFamilyItemProvider.dispose();
		if (attributeNameMappingItemProvider != null) attributeNameMappingItemProvider.dispose();
		if (attributeItemProvider != null) attributeItemProvider.dispose();
		if (attributeLibItemProvider != null) attributeLibItemProvider.dispose();
		if (attributeValueRequirementItemProvider != null) attributeValueRequirementItemProvider.dispose();
		if (caexBasicObjectItemProvider != null) caexBasicObjectItemProvider.dispose();
		if (caexFileItemProvider != null) caexFileItemProvider.dispose();
		if (caexObjectItemProvider != null) caexObjectItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (externalInterfaceItemProvider != null) externalInterfaceItemProvider.dispose();
		if (externalReferenceItemProvider != null) externalReferenceItemProvider.dispose();
		if (instanceHierarchyItemProvider != null) instanceHierarchyItemProvider.dispose();
		if (interfaceClassLibItemProvider != null) interfaceClassLibItemProvider.dispose();
		if (interfaceClassItemProvider != null) interfaceClassItemProvider.dispose();
		if (interfaceFamilyItemProvider != null) interfaceFamilyItemProvider.dispose();
		if (interfaceIDMappingItemProvider != null) interfaceIDMappingItemProvider.dispose();
		if (internalElementItemProvider != null) internalElementItemProvider.dispose();
		if (internalLinkItemProvider != null) internalLinkItemProvider.dispose();
		if (mappingItemProvider != null) mappingItemProvider.dispose();
		if (nominalScaledItemProvider != null) nominalScaledItemProvider.dispose();
		if (ordinalScaledItemProvider != null) ordinalScaledItemProvider.dispose();
		if (refSemanticItemProvider != null) refSemanticItemProvider.dispose();
		if (roleClassLibItemProvider != null) roleClassLibItemProvider.dispose();
		if (roleClassItemProvider != null) roleClassItemProvider.dispose();
		if (roleFamilyItemProvider != null) roleFamilyItemProvider.dispose();
		if (roleRequirementsItemProvider != null) roleRequirementsItemProvider.dispose();
		if (sourceDocumentInformationItemProvider != null) sourceDocumentInformationItemProvider.dispose();
		if (supportedRoleClassItemProvider != null) supportedRoleClassItemProvider.dispose();
		if (systemUnitClassLibItemProvider != null) systemUnitClassLibItemProvider.dispose();
		if (systemUnitClassItemProvider != null) systemUnitClassItemProvider.dispose();
		if (systemUnitFamilyItemProvider != null) systemUnitFamilyItemProvider.dispose();
		if (unknownTypeItemProvider != null) unknownTypeItemProvider.dispose();
		if (copyrightItemProvider != null) copyrightItemProvider.dispose();
		if (descriptionItemProvider != null) descriptionItemProvider.dispose();
		if (revisionItemProvider != null) revisionItemProvider.dispose();
		if (versionItemProvider != null) versionItemProvider.dispose();
		if (additionalInformationItemProvider != null) additionalInformationItemProvider.dispose();
	}

}
